name: Build Kernel with SUSFS
on:
  workflow_dispatch:
    inputs:
      CPU: {default: '13.0', description: '分支'}
      FEIL: {default: 'vendor/waipio_QGKI.config', description: '配置文件'}
      CPUD: {default: 'sm7475', description: '处理器代号'}
      ANDROID_VERSION: {default: 'android13', description: '内核安卓版本'}
      KERNEL_VERSION: {default: '5.10', description: '内核版本'}
      SUSFS_ENABLED: {default: true, description: '添加 SUSFS', type: boolean}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with: {root-reserve-mb: 8192, temp-reserve-mb: 2048, remove-dotnet: 'true', remove-android: 'true', remove-haskell: 'true', remove-codeql: 'true'}
      
      - name: Configure Git
        run: |
          git config --global user.name "build"
          git config --global user.email "3436378798@qq.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl gcc-aarch64-linux-gnu g++-aarch64-linux-gnu flex bison libssl-dev bc

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          
          # 使用镜像源（无需认证）
          git clone https://gitlab.com/crdroid-mirror/android_kernel_xiaomi_sm7475.git -b ${{ inputs.CPU }} --depth=1
          mv android_kernel_xiaomi_sm7475 Xiaomi_Kernel_OpenSource
          
          cd Xiaomi_Kernel_OpenSource
          sed -i 's/ -dirty//g' scripts/setlocalversion

      - name: Set up susfs
        if: ${{ inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace/Xiaomi_Kernel_OpenSource
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }} --depth=1
          
          mkdir -p fs/sufs include/linux
          cp -r susfs4ksu/fs/sufs/* fs/sufs/ 2>/dev/null || :
          cp -r susfs4ksu/include/linux/* include/linux/ 2>/dev/null || :
          touch fs/sufs/Kconfig

      - name: Fix Kconfig references
        run: |
          cd kernel_workspace/Xiaomi_Kernel_OpenSource
          if ! grep -q "fs/sufs/Kconfig" drivers/misc/Kconfig; then
            echo -e "\n# SUSFS Integration\nsource \"fs/sufs/Kconfig\"" >> drivers/misc/Kconfig
          fi
          if ! grep -q "obj-y += sufs" fs/Makefile; then
            echo "obj-y += sufs/" >> fs/Makefile
          fi

      - name: Build kernel
        run: |
          cd kernel_workspace/Xiaomi_Kernel_OpenSource
          cp arch/arm64/configs/${{ inputs.FEIL }} .config
          make O=out ARCH=arm64 oldconfig
          make -j$(nproc) O=out ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu-

      - name: Make AnyKernel3
        run: |
          cd kernel_workspace
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          cp Xiaomi_Kernel_OpenSource/out/arch/arm64/boot/Image.gz ./AnyKernel3/Image.gz
          
          mkdir -p ./AnyKernel3/ramdisk/sbin
          curl -L https://gitlab.com/simonpunk/susfs4ksu/-/raw/main/bin/arm64/sufs -o ./AnyKernel3/ramdisk/sbin/sufs
          chmod 755 ./AnyKernel3/ramdisk/sbin/sufs
          
          cat << EOF > ./AnyKernel3/ramdisk/init.sufs.rc
          service sufs-daemon /sbin/sufs --mount
              class main
              user root
              group root
              oneshot
          EOF
          echo 'import /init.sufs.rc' >> ./AnyKernel3/ramdisk/init.rc
          
          echo 'set_perm_recursive 0 0 0755 0755 "/sbin";' >> ./AnyKernel3/anykernel.sh
          echo 'set_perm 0 0 0755 "/sbin/sufs";' >> ./AnyKernel3/anykernel.sh
          sed -i '/device\.name1=/a device.name1=marble' ./AnyKernel3/anykernel.sh
          sed -i '/device\.name2=/a device.name2=marblein' ./AnyKernel3/anykernel.sh

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_SUSFS_marble
          path: ./kernel_workspace/AnyKernel3/*
