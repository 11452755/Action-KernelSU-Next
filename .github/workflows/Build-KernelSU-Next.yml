name: Build Kernel with SUSFS
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'marble-s-oss'
      FEIL:
        description: "配置文件"
        required: true
        default: 'marble_defconfig'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'sm7475'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android12'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '5.10'
      SUSFS_ENABLED:
        description: "添加 SUSFS"
        required: true
        type: boolean
        default: true
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Configure Git
        run: |
          git config --global user.name "build"
          git config --global user.email "3436378798@qq.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl gcc-aarch64-linux-gnu g++-aarch64-linux-gnu flex bison libssl-dev bc

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          git clone https://github.com/MiCode/Xiaomi_Kernel_OpenSource.git -b ${{ github.event.inputs.CPU }} --depth=1
          cd Xiaomi_Kernel_OpenSource
          sed -i 's/ -dirty//g' scripts/setlocalversion
          rm -rf drivers/misc/MMid/ 2>/dev/null || true

      - name: Set up susfs
        if: github.event.inputs.SUSFS_ENABLED == 'true'
        run: |
          cd kernel_workspace/Xiaomi_Kernel_OpenSource
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }} --depth=1
          
          # 创建目录
          mkdir -p fs/sufs
          mkdir -p include/linux
          
          # 兼容性复制
          cp -r susfs4ksu/fs/sufs/* fs/sufs/ 2>/dev/null || :
          cp -r susfs4ksu/kernel_patches/fs/sufs/* fs/sufs/ 2>/dev/null || :
          
          cp -r susfs4ksu/include/linux/* include/linux/ 2>/dev/null || :
          cp -r susfs4ksu/kernel_patches/include/linux/* include/linux/ 2>/dev/null || :
          
          # 添加Kconfig引用
          if [ -f "fs/sufs/Kconfig" ]; then
            if ! grep -q "fs/sufs/Kconfig" drivers/misc/Kconfig; then
              echo -e "\n# SUSFS Integration\nsource \"fs/sufs/Kconfig\"" >> drivers/misc/Kconfig
            fi
          else
            echo "创建空 Kconfig 防止编译失败..."
            touch fs/sufs/Kconfig
            echo -e "\n# SUSFS Integration\nsource \"fs/sufs/Kconfig\"" >> drivers/misc/Kconfig
          fi

      - name: Fix Makefile and Kconfig
        run: |
          cd kernel_workspace/Xiaomi_Kernel_OpenSource
          
          # 确保sufs目录被编译
          if ! grep -q "obj-y += sufs" fs/Makefile; then
            sed -i '/obj-y += /a obj-y += sufs/' fs/Makefile
          fi
          
          # 修复换行符
          sed -i 's/\r$//' drivers/misc/Kconfig 2>/dev/null || :
          sed -i 's/\r$//' fs/sufs/Kconfig 2>/dev/null || :

      - name: Build kernel
        run: |
          cd kernel_workspace/Xiaomi_Kernel_OpenSource
          make O=out ARCH=arm64 ${{ github.event.inputs.FEIL }}
          make -j$(nproc) O=out ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu-

      - name: Make AnyKernel3
        run: |
          cd kernel_workspace
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          cp Xiaomi_Kernel_OpenSource/out/arch/arm64/boot/Image ./AnyKernel3/
          
          # 添加sufs
          mkdir -p ./AnyKernel3/ramdisk/sbin
          if [ -f "Xiaomi_Kernel_OpenSource/susfs4ksu/bin/arm64/sufs" ]; then
            cp Xiaomi_Kernel_OpenSource/susfs4ksu/bin/arm64/sufs ./AnyKernel3/ramdisk/sbin/
          else
            # 备用方案：从已知URL下载
            curl -L https://gitlab.com/simonpunk/susfs4ksu/-/raw/main/bin/arm64/sufs?inline=false -o ./AnyKernel3/ramdisk/sbin/sufs
          fi
          chmod 755 ./AnyKernel3/ramdisk/sbin/sufs
          
          # 启动脚本
          echo 'service sufs-daemon /sbin/sufs --mount' > ./AnyKernel3/ramdisk/init.sufs.rc
          echo '    class main' >> ./AnyKernel3/ramdisk/init.sufs.rc
          echo '    user root' >> ./AnyKernel3/ramdisk/init.sufs.rc
          echo '    group root' >> ./AnyKernel3/ramdisk/init.sufs.rc
          echo '    oneshot' >> ./AnyKernel3/ramdisk/init.sufs.rc
          echo 'import /init.sufs.rc' >> ./AnyKernel3/ramdisk/init.rc
          
          # 权限设置
          echo 'set_perm_recursive 0 0 0755 0755 "/sbin";' >> ./AnyKernel3/anykernel.sh
          echo 'set_perm 0 0 0755 "/sbin/sufs";' >> ./AnyKernel3/anykernel.sh
          sed -i '/device\.name1=/a device.name1=marble' ./AnyKernel3/anykernel.sh
          sed -i '/device\.name2=/a device.name2=marblein' ./AnyKernel3/anykernel.sh

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_SUSFS_marble
          path: ./kernel_workspace/AnyKernel3/*
