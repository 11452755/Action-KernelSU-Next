name: Build KernelSU Next
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'marble-s-oss'  # 红米专用分支
      FEIL:
        description: "配置文件"
        required: true
        default: 'marble_defconfig'  # 设备配置
      CPUD:
        description: "处理器代号"
        required: true
        default: 'sm7475'  # 骁龙7+ Gen2
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android12'  # 匹配设备
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '5.10'  # 主版本号
      KSUNEXT_ENABLED:
        description: "添加 KSU Next"
        required: true
        type: boolean
        default: false  # 关闭KSU
      SUSFS_ENABLED:
        description: "添加 SUSFS"
        required: true
        type: boolean
        default: true  # 启用SUSFS
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Configure Git
        run: |
          git config --global user.name "build"
          git config --global user.email "3436378798@qq.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl gcc-aarch64-linux-gnu g++-aarch64-linux-gnu flex bison libssl-dev

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          git clone https://github.com/MiCode/Xiaomi_Kernel_OpenSource.git -b ${{ github.event.inputs.CPU }} --depth=1
          cd Xiaomi_Kernel_OpenSource
          sed -i 's/ -dirty//g' scripts/setlocalversion

      - name: Set up susfs
        if: github.event.inputs.SUSFS_ENABLED == 'true'
        run: |
          cd kernel_workspace/Xiaomi_Kernel_OpenSource
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          
          # 应用补丁
          cp susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
          
          # 复制必要文件
          cp -r susfs4ksu/kernel_patches/fs/* fs/
          cp -r susfs4ksu/kernel_patches/include/linux/* include/linux/

      - name: Build kernel
        run: |
          cd kernel_workspace/Xiaomi_Kernel_OpenSource
          make O=out ARCH=arm64 ${{ github.event.inputs.FEIL }}
          make -j$(nproc) O=out ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu-

      - name: Make AnyKernel3
        run: |
          cd kernel_workspace
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          cp Xiaomi_Kernel_OpenSource/out/arch/arm64/boot/Image ./AnyKernel3/
          
          # 添加sufs到ramdisk
          mkdir -p ./AnyKernel3/ramdisk/sbin
          cp Xiaomi_Kernel_OpenSource/susfs4ksu/bin/arm64/sufs ./AnyKernel3/ramdisk/sbin/
          chmod 755 ./AnyKernel3/ramdisk/sbin/sufs
          
          # 创建启动脚本
          echo 'service sufs-daemon /sbin/sufs --mount' > ./AnyKernel3/ramdisk/init.sufs.rc
          echo '    class main' >> ./AnyKernel3/ramdisk/init.sufs.rc
          echo '    user root' >> ./AnyKernel3/ramdisk/init.sufs.rc
          echo '    group root' >> ./AnyKernel3/ramdisk/init.sufs.rc
          echo '    oneshot' >> ./AnyKernel3/ramdisk/init.sufs.rc
          echo 'import /init.sufs.rc' >> ./AnyKernel3/ramdisk/init.rc
          
          # 修改刷机脚本权限
          echo 'set_perm_recursive 0 0 0755 0755 "/sbin";' >> ./AnyKernel3/anykernel.sh
          echo 'set_perm 0 0 0755 "/sbin/sufs";' >> ./AnyKernel3/anykernel.sh

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_SUSFS_${{ github.event.inputs.FEIL }}
          path: ./kernel_workspace/AnyKernel3/*
