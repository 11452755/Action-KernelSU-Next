name: Build Kernel with SUSFS for Android 13
on:
  workflow_dispatch:
    inputs:
      CPU: {默认: 'lineage-20', description: '分支 (Android 13)'}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with: {root-reserve-mb: 8192, temp-reserve-mb: 2048, remove-dotnet: 'true', remove-android: 'true', remove-haskell: 'true', remove-codeql: 'true'}
      
      - name: Configure Git
        run: |
          git config --global user.name "build"
          git config --global user.email "3436378798@qq.com"
          git config --global http.postBuffer 524288000
          # 使用正确的镜像代理
          git config --global url."https://ghproxy.com/https://github.com".insteadOf "https://github.com"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3 git curl flex bison libssl-dev bc
          sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          
          # 使用直接下载链接（绕过Git）
          curl -LO https://github.com/LineageOS/android_kernel_xiaomi_sm7475/archive/refs/heads/${{ inputs.CPU }}.zip
          unzip ${{ inputs.CPU }}.zip
          mv android_kernel_xiaomi_sm7475-${{ inputs.CPU }} Xiaomi_Kernel_OpenSource
          
          cd Xiaomi_Kernel_OpenSource
          sed -i 's/ -dirty//g' scripts/setlocalversion

      - name: Set up susfs
        run: |
          cd kernel_workspace/Xiaomi_Kernel_OpenSource
          
          # 创建sufs目录
          mkdir -p fs/sufs
          
          # 下载预编译的sufs
          curl -L https://cdn.jsdelivr.net/gh/tiann/sufs@main/bin/arm64/sufs -o fs/sufs/sufs
          chmod +x fs/sufs/sufs
          
          # 创建必要的Kconfig文件
          echo "config SUSFS" > fs/sufs/Kconfig
          echo "    bool \"SUSFS support\"" >> fs/sufs/Kconfig

      - name: Fix Kconfig references
        run: |
          cd kernel_workspace/Xiaomi_Kernel_OpenSource
          echo -e "\n# SUSFS Integration\nsource \"fs/sufs/Kconfig\"" >> drivers/misc/Kconfig
          echo "obj-y += sufs/" >> fs/Makefile

      - name: Build kernel
        run: |
          cd kernel_workspace/Xiaomi_Kernel_OpenSource
          make O=out ARCH=arm64 marble_defconfig
          make -j$(nproc) O=out ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu-

      - name: Make AnyKernel3
        run: |
          cd kernel_workspace
          
          # 下载AnyKernel3
          curl -LO https://github.com/Kernel-SU/AnyKernel3/archive/refs/heads/master.zip
          unzip master.zip
          mv AnyKernel3-master AnyKernel3
          
          # 复制内核镜像
          cp Xiaomi_Kernel_OpenSource/out/arch/arm64/boot/Image ./AnyKernel3/
          
          # 添加sufs
          mkdir -p ./AnyKernel3/ramdisk/sbin
          cp Xiaomi_Kernel_OpenSource/fs/sufs/sufs ./AnyKernel3/ramdisk/sbin/
          chmod 755 ./AnyKernel3/ramdisk/sbin/sufs
          
          # 启动脚本
          cat << EOF > ./AnyKernel3/ramdisk/init.sufs.rc
          service sufs-daemon /sbin/sufs --mount
              class main
              user root
              group root
              oneshot
          EOF
          echo 'import /init.sufs.rc' >> ./AnyKernel3/ramdisk/init.rc
          
          # 权限设置
          echo 'set_perm_recursive 0 0 0755 0755 "/sbin";' >> ./AnyKernel3/anykernel.sh
          echo 'set_perm 0 0 0755 "/sbin/sufs";' >> ./AnyKernel3/anykernel.sh
          
          # 添加设备兼容性
          sed -i '/device\.name1=/a device.name1=marble' ./AnyKernel3/anykernel.sh
          sed -i '/device\.name2=/a device.name2=marblein' ./AnyKernel3/anykernel.sh
          
          # 打包
          cd AnyKernel3
          zip -r9 ../AnyKernel3_SUSFS_marble_android13.zip .

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_SUSFS_marble_android13
          path: ./kernel_workspace/AnyKernel3_SUSFS_marble_android13.zip
